//Module        : gsl_matrix_int_h
//Timestamp     : 2006/3/29 3:52:26 UTC
//Timestamp     : 2006/3/29 14:52:26 (local)
//Raw Header    : gsl_matrix_int.h
//Preprocessor  : gcc -E
//Input file: gsl.flxcc.i
//Flxcc Control : gsl.flxcc
//Felix Version : 1.1.2_rc7
include 'std';

//#define __GSL_MATRIX_INT_H__
header '#include <gsl/gsl_matrix_int.h>';

//INCLUDES
include "gsl_block_int_lib";
include "gsl_vector_int_lib";

class gsl_matrix_int_h
{
  open C_hack;
  open gsl_block_int_h;
  open gsl_vector_int_h;

  //ABSTRACT TYPES
  type _gsl_matrix_int_const_view = '_gsl_matrix_int_const_view';
  type gsl_matrix_int = 'gsl_matrix_int';
  type _gsl_matrix_int_view = '_gsl_matrix_int_view';

  //TYPE ALIASES
  typedef gsl_matrix_int_const_view = _gsl_matrix_int_const_view;
  typedef gsl_matrix_int_view = _gsl_matrix_int_view;

  //PROCEDURES
  proc gsl_matrix_int_free: ptr[gsl_matrix_int];
  proc gsl_matrix_int_max_index: cptr[gsl_matrix_int] * ptr[size] * ptr[size];
  proc gsl_matrix_int_min_index: cptr[gsl_matrix_int] * ptr[size] * ptr[size];
  proc gsl_matrix_int_minmax: cptr[gsl_matrix_int] * ptr[int] * ptr[int];
  proc gsl_matrix_int_minmax_index: cptr[gsl_matrix_int] * ptr[size] * ptr[size] * ptr[size] * ptr[size];
  proc gsl_matrix_int_set: ptr[gsl_matrix_int] * size * size * int;
  proc gsl_matrix_int_set_all: ptr[gsl_matrix_int] * int;
  proc gsl_matrix_int_set_identity: ptr[gsl_matrix_int];
  proc gsl_matrix_int_set_zero: ptr[gsl_matrix_int];

  //FUNCTIONS
  fun gsl_matrix_int_add: ptr[gsl_matrix_int] * cptr[gsl_matrix_int] -> int;
  fun gsl_matrix_int_add_constant: ptr[gsl_matrix_int] * double -> int;
  fun gsl_matrix_int_add_diagonal: ptr[gsl_matrix_int] * double -> int;
  fun gsl_matrix_int_alloc: size * size -> ptr[gsl_matrix_int];
  fun gsl_matrix_int_alloc_from_block: ptr[gsl_block_int] * size * size * size * size -> ptr[gsl_matrix_int];
  fun gsl_matrix_int_alloc_from_matrix: ptr[gsl_matrix_int] * size * size * size * size -> ptr[gsl_matrix_int];
  fun gsl_matrix_int_calloc: size * size -> ptr[gsl_matrix_int];
  fun gsl_matrix_int_column: ptr[gsl_matrix_int] * size -> _gsl_vector_int_view;
  fun gsl_matrix_int_const_column: cptr[gsl_matrix_int] * size -> _gsl_vector_int_const_view;
  fun gsl_matrix_int_const_diagonal: cptr[gsl_matrix_int] -> _gsl_vector_int_const_view;
  fun gsl_matrix_int_const_ptr: cptr[gsl_matrix_int] * size * size -> cptr[int];
  fun gsl_matrix_int_const_row: cptr[gsl_matrix_int] * size -> _gsl_vector_int_const_view;
  fun gsl_matrix_int_const_subdiagonal: cptr[gsl_matrix_int] * size -> _gsl_vector_int_const_view;
  fun gsl_matrix_int_const_submatrix: cptr[gsl_matrix_int] * size * size * size * size -> _gsl_matrix_int_const_view;
  fun gsl_matrix_int_const_superdiagonal: cptr[gsl_matrix_int] * size -> _gsl_vector_int_const_view;
  fun gsl_matrix_int_const_view_array: cptr[int] * size * size -> _gsl_matrix_int_const_view;
  fun gsl_matrix_int_const_view_array_with_tda: cptr[int] * size * size * size -> _gsl_matrix_int_const_view;
  fun gsl_matrix_int_const_view_vector: cptr[gsl_vector_int] * size * size -> _gsl_matrix_int_const_view;
  fun gsl_matrix_int_const_view_vector_with_tda: cptr[gsl_vector_int] * size * size * size -> _gsl_matrix_int_const_view;
  fun gsl_matrix_int_diagonal: ptr[gsl_matrix_int] -> _gsl_vector_int_view;
  fun gsl_matrix_int_div_elements: ptr[gsl_matrix_int] * cptr[gsl_matrix_int] -> int;
  fun gsl_matrix_int_fprintf: ptr[FILE] * cptr[gsl_matrix_int] * cptr[char] -> int;
  fun gsl_matrix_int_fread: ptr[FILE] * ptr[gsl_matrix_int] -> int;
  fun gsl_matrix_int_fscanf: ptr[FILE] * ptr[gsl_matrix_int] -> int;
  fun gsl_matrix_int_fwrite: ptr[FILE] * cptr[gsl_matrix_int] -> int;
  fun gsl_matrix_int_get: cptr[gsl_matrix_int] * size * size -> int;
  fun gsl_matrix_int_get_col: ptr[gsl_vector_int] * cptr[gsl_matrix_int] * size -> int;
  fun gsl_matrix_int_get_row: ptr[gsl_vector_int] * cptr[gsl_matrix_int] * size -> int;
  fun gsl_matrix_int_isnull: cptr[gsl_matrix_int] -> int;
  fun gsl_matrix_int_max: cptr[gsl_matrix_int] -> int;
  fun gsl_matrix_int_memcpy: ptr[gsl_matrix_int] * cptr[gsl_matrix_int] -> int;
  fun gsl_matrix_int_min: cptr[gsl_matrix_int] -> int;
  fun gsl_matrix_int_mul_elements: ptr[gsl_matrix_int] * cptr[gsl_matrix_int] -> int;
  fun gsl_matrix_int_ptr: ptr[gsl_matrix_int] * size * size -> ptr[int];
  fun gsl_matrix_int_row: ptr[gsl_matrix_int] * size -> _gsl_vector_int_view;
  fun gsl_matrix_int_scale: ptr[gsl_matrix_int] * double -> int;
  fun gsl_matrix_int_set_col: ptr[gsl_matrix_int] * size * cptr[gsl_vector_int] -> int;
  fun gsl_matrix_int_set_row: ptr[gsl_matrix_int] * size * cptr[gsl_vector_int] -> int;
  fun gsl_matrix_int_sub: ptr[gsl_matrix_int] * cptr[gsl_matrix_int] -> int;
  fun gsl_matrix_int_subdiagonal: ptr[gsl_matrix_int] * size -> _gsl_vector_int_view;
  fun gsl_matrix_int_submatrix: ptr[gsl_matrix_int] * size * size * size * size -> _gsl_matrix_int_view;
  fun gsl_matrix_int_superdiagonal: ptr[gsl_matrix_int] * size -> _gsl_vector_int_view;
  fun gsl_matrix_int_swap: ptr[gsl_matrix_int] * ptr[gsl_matrix_int] -> int;
  fun gsl_matrix_int_swap_columns: ptr[gsl_matrix_int] * size * size -> int;
  fun gsl_matrix_int_swap_rowcol: ptr[gsl_matrix_int] * size * size -> int;
  fun gsl_matrix_int_swap_rows: ptr[gsl_matrix_int] * size * size -> int;
  fun gsl_matrix_int_transpose: ptr[gsl_matrix_int] -> int;
  fun gsl_matrix_int_transpose_memcpy: ptr[gsl_matrix_int] * cptr[gsl_matrix_int] -> int;
  fun gsl_matrix_int_view_array: ptr[int] * size * size -> _gsl_matrix_int_view;
  fun gsl_matrix_int_view_array_with_tda: ptr[int] * size * size * size -> _gsl_matrix_int_view;
  fun gsl_matrix_int_view_vector: ptr[gsl_vector_int] * size * size -> _gsl_matrix_int_view;
  fun gsl_matrix_int_view_vector_with_tda: ptr[gsl_vector_int] * size * size * size -> _gsl_matrix_int_view;
  fun gsl_vector_int_alloc_col_from_matrix: ptr[gsl_matrix_int] * size -> ptr[gsl_vector_int];
  fun gsl_vector_int_alloc_row_from_matrix: ptr[gsl_matrix_int] * size -> ptr[gsl_vector_int];
}
