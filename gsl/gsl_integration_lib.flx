//Module        : gsl_integration_h
//Timestamp     : 2006/3/29 3:52:26 UTC
//Timestamp     : 2006/3/29 14:52:26 (local)
//Raw Header    : gsl_integration.h
//Preprocessor  : gcc -E
//Input file: gsl.flxcc.i
//Flxcc Control : gsl.flxcc
//Felix Version : 1.1.2_rc7
include 'std';

//#define __GSL_INTEGRATION_H__
header '#include <gsl/gsl_integration.h>';

//INCLUDES
include "gsl_math_lib";

class gsl_integration_h
{
  open C_hack;
  open gsl_math_h;

  //ABSTRACT TYPES
  type gsl_integration_qaws_table = 'gsl_integration_qaws_table';
  type gsl_integration_workspace = 'gsl_integration_workspace';
  type gsl_integration_qawo_table = 'gsl_integration_qawo_table';

  //TYPE ALIASES
  typedef gsl_integration_rule = cptr[gsl_function] * double * double * ptr[double] * ptr[double] * ptr[double] * ptr[double] -> void_t;
  typedef gsl_integration_qawo_enum = int;

  //ENUMERATION CONSTANTS
  const GSL_INTEG_GAUSS15: int = 'GSL_INTEG_GAUSS15';
  const GSL_INTEG_COSINE: int = 'GSL_INTEG_COSINE';
  const GSL_INTEG_GAUSS21: int = 'GSL_INTEG_GAUSS21';
  const GSL_INTEG_GAUSS31: int = 'GSL_INTEG_GAUSS31';
  const GSL_INTEG_SINE: int = 'GSL_INTEG_SINE';
  const GSL_INTEG_GAUSS41: int = 'GSL_INTEG_GAUSS41';
  const GSL_INTEG_GAUSS51: int = 'GSL_INTEG_GAUSS51';
  const GSL_INTEG_GAUSS61: int = 'GSL_INTEG_GAUSS61';

  //PROCEDURES
  proc gsl_integration_qawo_table_free: ptr[gsl_integration_qawo_table];
  proc gsl_integration_qaws_table_free: ptr[gsl_integration_qaws_table];
  proc gsl_integration_qcheb: ptr[gsl_function] * double * double * ptr[double] * ptr[double];
  proc gsl_integration_qk: int * cptr[double] * cptr[double] * cptr[double] * ptr[double] * ptr[double] * cptr[gsl_function] * double * double * ptr[double] * ptr[double] * ptr[double] * ptr[double];
  proc gsl_integration_qk15: cptr[gsl_function] * double * double * ptr[double] * ptr[double] * ptr[double] * ptr[double];
  proc gsl_integration_qk21: cptr[gsl_function] * double * double * ptr[double] * ptr[double] * ptr[double] * ptr[double];
  proc gsl_integration_qk31: cptr[gsl_function] * double * double * ptr[double] * ptr[double] * ptr[double] * ptr[double];
  proc gsl_integration_qk41: cptr[gsl_function] * double * double * ptr[double] * ptr[double] * ptr[double] * ptr[double];
  proc gsl_integration_qk51: cptr[gsl_function] * double * double * ptr[double] * ptr[double] * ptr[double] * ptr[double];
  proc gsl_integration_qk61: cptr[gsl_function] * double * double * ptr[double] * ptr[double] * ptr[double] * ptr[double];
  proc gsl_integration_workspace_free: ptr[gsl_integration_workspace];

  //FUNCTIONS
  fun gsl_integration_qag: cptr[gsl_function] * double * double * double * double * size * int * ptr[gsl_integration_workspace] * ptr[double] * ptr[double] -> int;
  fun gsl_integration_qagi: ptr[gsl_function] * double * double * size * ptr[gsl_integration_workspace] * ptr[double] * ptr[double] -> int;
  fun gsl_integration_qagil: ptr[gsl_function] * double * double * double * size * ptr[gsl_integration_workspace] * ptr[double] * ptr[double] -> int;
  fun gsl_integration_qagiu: ptr[gsl_function] * double * double * double * size * ptr[gsl_integration_workspace] * ptr[double] * ptr[double] -> int;
  fun gsl_integration_qagp: cptr[gsl_function] * ptr[double] * size * double * double * size * ptr[gsl_integration_workspace] * ptr[double] * ptr[double] -> int;
  fun gsl_integration_qags: cptr[gsl_function] * double * double * double * double * size * ptr[gsl_integration_workspace] * ptr[double] * ptr[double] -> int;
  fun gsl_integration_qawc: ptr[gsl_function] * double * double * double * double * double * size * ptr[gsl_integration_workspace] * ptr[double] * ptr[double] -> int;
  fun gsl_integration_qawf: ptr[gsl_function] * double * double * size * ptr[gsl_integration_workspace] * ptr[gsl_integration_workspace] * ptr[gsl_integration_qawo_table] * ptr[double] * ptr[double] -> int;
  fun gsl_integration_qawo: ptr[gsl_function] * double * double * double * size * ptr[gsl_integration_workspace] * ptr[gsl_integration_qawo_table] * ptr[double] * ptr[double] -> int;
  fun gsl_integration_qawo_table_alloc: double * double * int * size -> ptr[gsl_integration_qawo_table];
  fun gsl_integration_qawo_table_set: ptr[gsl_integration_qawo_table] * double * double * int -> int;
  fun gsl_integration_qawo_table_set_length: ptr[gsl_integration_qawo_table] * double -> int;
  fun gsl_integration_qaws: ptr[gsl_function] * double * double * ptr[gsl_integration_qaws_table] * double * double * size * ptr[gsl_integration_workspace] * ptr[double] * ptr[double] -> int;
  fun gsl_integration_qaws_table_alloc: double * double * int * int -> ptr[gsl_integration_qaws_table];
  fun gsl_integration_qaws_table_set: ptr[gsl_integration_qaws_table] * double * double * int * int -> int;
  fun gsl_integration_qng: cptr[gsl_function] * double * double * double * double * ptr[double] * ptr[double] * ptr[size] -> int;
  fun gsl_integration_workspace_alloc: size -> ptr[gsl_integration_workspace];
}
