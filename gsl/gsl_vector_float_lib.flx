//Module        : gsl_vector_float_h
//Timestamp     : 2006/3/29 3:52:26 UTC
//Timestamp     : 2006/3/29 14:52:26 (local)
//Raw Header    : gsl_vector_float.h
//Preprocessor  : gcc -E
//Input file: gsl.flxcc.i
//Flxcc Control : gsl.flxcc
//Felix Version : 1.1.2_rc7
include 'std';

//#define __GSL_VECTOR_FLOAT_H__
header '#include <gsl/gsl_vector_float.h>';

//INCLUDES
include "gsl_block_float_lib";

class gsl_vector_float_h
{
  open C_hack;
  open gsl_block_float_h;

  //ABSTRACT TYPES
  type gsl_vector_float = 'gsl_vector_float';
  type _gsl_vector_float_view = '_gsl_vector_float_view';
  type _gsl_vector_float_const_view = '_gsl_vector_float_const_view';

  //TYPE ALIASES
  typedef gsl_vector_float_const_view = _gsl_vector_float_const_view;
  typedef gsl_vector_float_view = _gsl_vector_float_view;

  //PROCEDURES
  proc gsl_vector_float_free: ptr[gsl_vector_float];
  proc gsl_vector_float_minmax: cptr[gsl_vector_float] * ptr[float] * ptr[float];
  proc gsl_vector_float_minmax_index: cptr[gsl_vector_float] * ptr[size] * ptr[size];
  proc gsl_vector_float_set: ptr[gsl_vector_float] * size * float;
  proc gsl_vector_float_set_all: ptr[gsl_vector_float] * float;
  proc gsl_vector_float_set_zero: ptr[gsl_vector_float];

  //FUNCTIONS
  fun gsl_vector_float_add: ptr[gsl_vector_float] * cptr[gsl_vector_float] -> int;
  fun gsl_vector_float_add_constant: ptr[gsl_vector_float] * double -> int;
  fun gsl_vector_float_alloc: size -> ptr[gsl_vector_float];
  fun gsl_vector_float_alloc_from_block: ptr[gsl_block_float] * size * size * size -> ptr[gsl_vector_float];
  fun gsl_vector_float_alloc_from_vector: ptr[gsl_vector_float] * size * size * size -> ptr[gsl_vector_float];
  fun gsl_vector_float_calloc: size -> ptr[gsl_vector_float];
  fun gsl_vector_float_const_ptr: cptr[gsl_vector_float] * size -> cptr[float];
  fun gsl_vector_float_const_subvector: cptr[gsl_vector_float] * size * size -> _gsl_vector_float_const_view;
  fun gsl_vector_float_const_subvector_with_stride: cptr[gsl_vector_float] * size * size * size -> _gsl_vector_float_const_view;
  fun gsl_vector_float_const_view_array: cptr[float] * size -> _gsl_vector_float_const_view;
  fun gsl_vector_float_const_view_array_with_stride: cptr[float] * size * size -> _gsl_vector_float_const_view;
  fun gsl_vector_float_div: ptr[gsl_vector_float] * cptr[gsl_vector_float] -> int;
  fun gsl_vector_float_fprintf: ptr[FILE] * cptr[gsl_vector_float] * cptr[char] -> int;
  fun gsl_vector_float_fread: ptr[FILE] * ptr[gsl_vector_float] -> int;
  fun gsl_vector_float_fscanf: ptr[FILE] * ptr[gsl_vector_float] -> int;
  fun gsl_vector_float_fwrite: ptr[FILE] * cptr[gsl_vector_float] -> int;
  fun gsl_vector_float_get: cptr[gsl_vector_float] * size -> float;
  fun gsl_vector_float_isnull: cptr[gsl_vector_float] -> int;
  fun gsl_vector_float_max: cptr[gsl_vector_float] -> float;
  fun gsl_vector_float_max_index: cptr[gsl_vector_float] -> size;
  fun gsl_vector_float_memcpy: ptr[gsl_vector_float] * cptr[gsl_vector_float] -> int;
  fun gsl_vector_float_min: cptr[gsl_vector_float] -> float;
  fun gsl_vector_float_min_index: cptr[gsl_vector_float] -> size;
  fun gsl_vector_float_mul: ptr[gsl_vector_float] * cptr[gsl_vector_float] -> int;
  fun gsl_vector_float_ptr: ptr[gsl_vector_float] * size -> ptr[float];
  fun gsl_vector_float_reverse: ptr[gsl_vector_float] -> int;
  fun gsl_vector_float_scale: ptr[gsl_vector_float] * double -> int;
  fun gsl_vector_float_set_basis: ptr[gsl_vector_float] * size -> int;
  fun gsl_vector_float_sub: ptr[gsl_vector_float] * cptr[gsl_vector_float] -> int;
  fun gsl_vector_float_subvector: ptr[gsl_vector_float] * size * size -> _gsl_vector_float_view;
  fun gsl_vector_float_subvector_with_stride: ptr[gsl_vector_float] * size * size * size -> _gsl_vector_float_view;
  fun gsl_vector_float_swap: ptr[gsl_vector_float] * ptr[gsl_vector_float] -> int;
  fun gsl_vector_float_swap_elements: ptr[gsl_vector_float] * size * size -> int;
  fun gsl_vector_float_view_array: ptr[float] * size -> _gsl_vector_float_view;
  fun gsl_vector_float_view_array_with_stride: ptr[float] * size * size -> _gsl_vector_float_view;
}
