//Module        : gsl_fft_halfcomplex_h
//Timestamp     : 2006/3/29 3:52:26 UTC
//Timestamp     : 2006/3/29 14:52:26 (local)
//Raw Header    : gsl_fft_halfcomplex.h
//Preprocessor  : gcc -E
//Input file: gsl.flxcc.i
//Flxcc Control : gsl.flxcc
//Felix Version : 1.1.2_rc7
include 'std';

//#define __GSL_FFT_HALFCOMPLEX_H__
header '#include <gsl/gsl_fft_halfcomplex.h>';

//INCLUDES
include "gsl_fft_real_lib";

class gsl_fft_halfcomplex_h
{
  open C_hack;
  open gsl_fft_real_h;

  //ABSTRACT TYPES
  type gsl_fft_halfcomplex_wavetable = 'gsl_fft_halfcomplex_wavetable';

  //PROCEDURES
  proc gsl_fft_halfcomplex_wavetable_free: ptr[gsl_fft_halfcomplex_wavetable];

  //FUNCTIONS
  fun gsl_fft_halfcomplex_backward: ptr[double] * size * size * cptr[gsl_fft_halfcomplex_wavetable] * ptr[gsl_fft_real_workspace] -> int;
  fun gsl_fft_halfcomplex_inverse: ptr[double] * size * size * cptr[gsl_fft_halfcomplex_wavetable] * ptr[gsl_fft_real_workspace] -> int;
  fun gsl_fft_halfcomplex_radix2_backward: ptr[double] * size * size -> int;
  fun gsl_fft_halfcomplex_radix2_inverse: ptr[double] * size * size -> int;
  fun gsl_fft_halfcomplex_radix2_transform: ptr[double] * size * size -> int;
  fun gsl_fft_halfcomplex_radix2_unpack: cptr[double] * ptr[double] * size * size -> int;
  fun gsl_fft_halfcomplex_transform: ptr[double] * size * size * cptr[gsl_fft_halfcomplex_wavetable] * ptr[gsl_fft_real_workspace] -> int;
  fun gsl_fft_halfcomplex_unpack: cptr[double] * ptr[double] * size * size -> int;
  fun gsl_fft_halfcomplex_wavetable_alloc: size -> ptr[gsl_fft_halfcomplex_wavetable];
}
