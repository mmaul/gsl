//Module        : gsl_blas_h
//Timestamp     : 2006/3/29 3:52:26 UTC
//Timestamp     : 2006/3/29 14:52:26 (local)
//Raw Header    : gsl_blas.h
//Preprocessor  : gcc -E
//Input file: gsl.flxcc.i
//Flxcc Control : gsl.flxcc
//Felix Version : 1.1.2_rc7
include 'std';

//#define __GSL_BLAS_H__
header '#include <gsl/gsl_blas.h>';

//INCLUDES
include "gsl_blas_types_lib";
include "gsl_complex_lib";
include "gsl_matrix_complex_double_lib";
include "gsl_matrix_complex_float_lib";
include "gsl_matrix_double_lib";
include "gsl_matrix_float_lib";
include "gsl_vector_complex_double_lib";
include "gsl_vector_complex_float_lib";
include "gsl_vector_double_lib";
include "gsl_vector_float_lib";

class gsl_blas_h
{
  open C_hack;
  open gsl_blas_types_h;
  open gsl_complex_h;
  open gsl_matrix_complex_double_h;
  open gsl_matrix_complex_float_h;
  open gsl_matrix_double_h;
  open gsl_matrix_float_h;
  open gsl_vector_complex_double_h;
  open gsl_vector_complex_float_h;
  open gsl_vector_double_h;
  open gsl_vector_float_h;

  //PROCEDURES
  proc gsl_blas_cscal: gsl_complex_float * ptr[gsl_vector_complex_float];
  proc gsl_blas_csscal: float * ptr[gsl_vector_complex_float];
  proc gsl_blas_dscal: double * ptr[gsl_vector];
  proc gsl_blas_sscal: float * ptr[gsl_vector_float];
  proc gsl_blas_zdscal: double * ptr[gsl_vector_complex];
  proc gsl_blas_zscal: gsl_complex * ptr[gsl_vector_complex];

  //FUNCTIONS
  fun gsl_blas_caxpy: gsl_complex_float * cptr[gsl_vector_complex_float] * ptr[gsl_vector_complex_float] -> int;
  fun gsl_blas_ccopy: cptr[gsl_vector_complex_float] * ptr[gsl_vector_complex_float] -> int;
  fun gsl_blas_cdotc: cptr[gsl_vector_complex_float] * cptr[gsl_vector_complex_float] * ptr[gsl_complex_float] -> int;
  fun gsl_blas_cdotu: cptr[gsl_vector_complex_float] * cptr[gsl_vector_complex_float] * ptr[gsl_complex_float] -> int;
  fun gsl_blas_cgemm: CBLAS_TRANSPOSE_t * CBLAS_TRANSPOSE_t * gsl_complex_float * cptr[gsl_matrix_complex_float] * cptr[gsl_matrix_complex_float] * gsl_complex_float * ptr[gsl_matrix_complex_float] -> int;
  fun gsl_blas_cgemv: CBLAS_TRANSPOSE_t * gsl_complex_float * cptr[gsl_matrix_complex_float] * cptr[gsl_vector_complex_float] * gsl_complex_float * ptr[gsl_vector_complex_float] -> int;
  fun gsl_blas_cgerc: gsl_complex_float * cptr[gsl_vector_complex_float] * cptr[gsl_vector_complex_float] * ptr[gsl_matrix_complex_float] -> int;
  fun gsl_blas_cgeru: gsl_complex_float * cptr[gsl_vector_complex_float] * cptr[gsl_vector_complex_float] * ptr[gsl_matrix_complex_float] -> int;
  fun gsl_blas_chemm: CBLAS_SIDE_t * CBLAS_UPLO_t * gsl_complex_float * cptr[gsl_matrix_complex_float] * cptr[gsl_matrix_complex_float] * gsl_complex_float * ptr[gsl_matrix_complex_float] -> int;
  fun gsl_blas_chemv: CBLAS_UPLO_t * gsl_complex_float * cptr[gsl_matrix_complex_float] * cptr[gsl_vector_complex_float] * gsl_complex_float * ptr[gsl_vector_complex_float] -> int;
  fun gsl_blas_cher: CBLAS_UPLO_t * float * cptr[gsl_vector_complex_float] * ptr[gsl_matrix_complex_float] -> int;
  fun gsl_blas_cher2: CBLAS_UPLO_t * gsl_complex_float * cptr[gsl_vector_complex_float] * cptr[gsl_vector_complex_float] * ptr[gsl_matrix_complex_float] -> int;
  fun gsl_blas_cher2k: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * gsl_complex_float * cptr[gsl_matrix_complex_float] * cptr[gsl_matrix_complex_float] * float * ptr[gsl_matrix_complex_float] -> int;
  fun gsl_blas_cherk: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * float * cptr[gsl_matrix_complex_float] * float * ptr[gsl_matrix_complex_float] -> int;
  fun gsl_blas_cswap: ptr[gsl_vector_complex_float] * ptr[gsl_vector_complex_float] -> int;
  fun gsl_blas_csymm: CBLAS_SIDE_t * CBLAS_UPLO_t * gsl_complex_float * cptr[gsl_matrix_complex_float] * cptr[gsl_matrix_complex_float] * gsl_complex_float * ptr[gsl_matrix_complex_float] -> int;
  fun gsl_blas_csyr2k: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * gsl_complex_float * cptr[gsl_matrix_complex_float] * cptr[gsl_matrix_complex_float] * gsl_complex_float * ptr[gsl_matrix_complex_float] -> int;
  fun gsl_blas_csyrk: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * gsl_complex_float * cptr[gsl_matrix_complex_float] * gsl_complex_float * ptr[gsl_matrix_complex_float] -> int;
  fun gsl_blas_ctrmm: CBLAS_SIDE_t * CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * CBLAS_DIAG_t * gsl_complex_float * cptr[gsl_matrix_complex_float] * ptr[gsl_matrix_complex_float] -> int;
  fun gsl_blas_ctrmv: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * CBLAS_DIAG_t * cptr[gsl_matrix_complex_float] * ptr[gsl_vector_complex_float] -> int;
  fun gsl_blas_ctrsm: CBLAS_SIDE_t * CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * CBLAS_DIAG_t * gsl_complex_float * cptr[gsl_matrix_complex_float] * ptr[gsl_matrix_complex_float] -> int;
  fun gsl_blas_ctrsv: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * CBLAS_DIAG_t * cptr[gsl_matrix_complex_float] * ptr[gsl_vector_complex_float] -> int;
  fun gsl_blas_dasum: cptr[gsl_vector] -> double;
  fun gsl_blas_daxpy: double * cptr[gsl_vector] * ptr[gsl_vector] -> int;
  fun gsl_blas_dcopy: cptr[gsl_vector] * ptr[gsl_vector] -> int;
  fun gsl_blas_ddot: cptr[gsl_vector] * cptr[gsl_vector] * ptr[double] -> int;
  fun gsl_blas_dgemm: CBLAS_TRANSPOSE_t * CBLAS_TRANSPOSE_t * double * cptr[gsl_matrix] * cptr[gsl_matrix] * double * ptr[gsl_matrix] -> int;
  fun gsl_blas_dgemv: CBLAS_TRANSPOSE_t * double * cptr[gsl_matrix] * cptr[gsl_vector] * double * ptr[gsl_vector] -> int;
  fun gsl_blas_dger: double * cptr[gsl_vector] * cptr[gsl_vector] * ptr[gsl_matrix] -> int;
  fun gsl_blas_dnrm2: cptr[gsl_vector] -> double;
  fun gsl_blas_drot: ptr[gsl_vector] * ptr[gsl_vector] * double * double -> int;
  fun gsl_blas_drotg: ptr[double] * ptr[double] * ptr[double] * ptr[double] -> int;
  fun gsl_blas_drotm: ptr[gsl_vector] * ptr[gsl_vector] * cptr[double] -> int;
  fun gsl_blas_drotmg: ptr[double] * ptr[double] * ptr[double] * double * ptr[double] -> int;
  fun gsl_blas_dsdot: cptr[gsl_vector_float] * cptr[gsl_vector_float] * ptr[double] -> int;
  fun gsl_blas_dswap: ptr[gsl_vector] * ptr[gsl_vector] -> int;
  fun gsl_blas_dsymm: CBLAS_SIDE_t * CBLAS_UPLO_t * double * cptr[gsl_matrix] * cptr[gsl_matrix] * double * ptr[gsl_matrix] -> int;
  fun gsl_blas_dsymv: CBLAS_UPLO_t * double * cptr[gsl_matrix] * cptr[gsl_vector] * double * ptr[gsl_vector] -> int;
  fun gsl_blas_dsyr: CBLAS_UPLO_t * double * cptr[gsl_vector] * ptr[gsl_matrix] -> int;
  fun gsl_blas_dsyr2: CBLAS_UPLO_t * double * cptr[gsl_vector] * cptr[gsl_vector] * ptr[gsl_matrix] -> int;
  fun gsl_blas_dsyr2k: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * double * cptr[gsl_matrix] * cptr[gsl_matrix] * double * ptr[gsl_matrix] -> int;
  fun gsl_blas_dsyrk: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * double * cptr[gsl_matrix] * double * ptr[gsl_matrix] -> int;
  fun gsl_blas_dtrmm: CBLAS_SIDE_t * CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * CBLAS_DIAG_t * double * cptr[gsl_matrix] * ptr[gsl_matrix] -> int;
  fun gsl_blas_dtrmv: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * CBLAS_DIAG_t * cptr[gsl_matrix] * ptr[gsl_vector] -> int;
  fun gsl_blas_dtrsm: CBLAS_SIDE_t * CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * CBLAS_DIAG_t * double * cptr[gsl_matrix] * ptr[gsl_matrix] -> int;
  fun gsl_blas_dtrsv: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * CBLAS_DIAG_t * cptr[gsl_matrix] * ptr[gsl_vector] -> int;
  fun gsl_blas_dzasum: cptr[gsl_vector_complex] -> double;
  fun gsl_blas_dznrm2: cptr[gsl_vector_complex] -> double;
  fun gsl_blas_icamax: cptr[gsl_vector_complex_float] -> CBLAS_INDEX_t;
  fun gsl_blas_idamax: cptr[gsl_vector] -> CBLAS_INDEX_t;
  fun gsl_blas_isamax: cptr[gsl_vector_float] -> CBLAS_INDEX_t;
  fun gsl_blas_izamax: cptr[gsl_vector_complex] -> CBLAS_INDEX_t;
  fun gsl_blas_sasum: cptr[gsl_vector_float] -> float;
  fun gsl_blas_saxpy: float * cptr[gsl_vector_float] * ptr[gsl_vector_float] -> int;
  fun gsl_blas_scasum: cptr[gsl_vector_complex_float] -> float;
  fun gsl_blas_scnrm2: cptr[gsl_vector_complex_float] -> float;
  fun gsl_blas_scopy: cptr[gsl_vector_float] * ptr[gsl_vector_float] -> int;
  fun gsl_blas_sdot: cptr[gsl_vector_float] * cptr[gsl_vector_float] * ptr[float] -> int;
  fun gsl_blas_sdsdot: float * cptr[gsl_vector_float] * cptr[gsl_vector_float] * ptr[float] -> int;
  fun gsl_blas_sgemm: CBLAS_TRANSPOSE_t * CBLAS_TRANSPOSE_t * float * cptr[gsl_matrix_float] * cptr[gsl_matrix_float] * float * ptr[gsl_matrix_float] -> int;
  fun gsl_blas_sgemv: CBLAS_TRANSPOSE_t * float * cptr[gsl_matrix_float] * cptr[gsl_vector_float] * float * ptr[gsl_vector_float] -> int;
  fun gsl_blas_sger: float * cptr[gsl_vector_float] * cptr[gsl_vector_float] * ptr[gsl_matrix_float] -> int;
  fun gsl_blas_snrm2: cptr[gsl_vector_float] -> float;
  fun gsl_blas_srot: ptr[gsl_vector_float] * ptr[gsl_vector_float] * float * float -> int;
  fun gsl_blas_srotg: ptr[float] * ptr[float] * ptr[float] * ptr[float] -> int;
  fun gsl_blas_srotm: ptr[gsl_vector_float] * ptr[gsl_vector_float] * cptr[float] -> int;
  fun gsl_blas_srotmg: ptr[float] * ptr[float] * ptr[float] * float * ptr[float] -> int;
  fun gsl_blas_sswap: ptr[gsl_vector_float] * ptr[gsl_vector_float] -> int;
  fun gsl_blas_ssymm: CBLAS_SIDE_t * CBLAS_UPLO_t * float * cptr[gsl_matrix_float] * cptr[gsl_matrix_float] * float * ptr[gsl_matrix_float] -> int;
  fun gsl_blas_ssymv: CBLAS_UPLO_t * float * cptr[gsl_matrix_float] * cptr[gsl_vector_float] * float * ptr[gsl_vector_float] -> int;
  fun gsl_blas_ssyr: CBLAS_UPLO_t * float * cptr[gsl_vector_float] * ptr[gsl_matrix_float] -> int;
  fun gsl_blas_ssyr2: CBLAS_UPLO_t * float * cptr[gsl_vector_float] * cptr[gsl_vector_float] * ptr[gsl_matrix_float] -> int;
  fun gsl_blas_ssyr2k: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * float * cptr[gsl_matrix_float] * cptr[gsl_matrix_float] * float * ptr[gsl_matrix_float] -> int;
  fun gsl_blas_ssyrk: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * float * cptr[gsl_matrix_float] * float * ptr[gsl_matrix_float] -> int;
  fun gsl_blas_strmm: CBLAS_SIDE_t * CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * CBLAS_DIAG_t * float * cptr[gsl_matrix_float] * ptr[gsl_matrix_float] -> int;
  fun gsl_blas_strmv: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * CBLAS_DIAG_t * cptr[gsl_matrix_float] * ptr[gsl_vector_float] -> int;
  fun gsl_blas_strsm: CBLAS_SIDE_t * CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * CBLAS_DIAG_t * float * cptr[gsl_matrix_float] * ptr[gsl_matrix_float] -> int;
  fun gsl_blas_strsv: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * CBLAS_DIAG_t * cptr[gsl_matrix_float] * ptr[gsl_vector_float] -> int;
  fun gsl_blas_zaxpy: gsl_complex * cptr[gsl_vector_complex] * ptr[gsl_vector_complex] -> int;
  fun gsl_blas_zcopy: cptr[gsl_vector_complex] * ptr[gsl_vector_complex] -> int;
  fun gsl_blas_zdotc: cptr[gsl_vector_complex] * cptr[gsl_vector_complex] * ptr[gsl_complex] -> int;
  fun gsl_blas_zdotu: cptr[gsl_vector_complex] * cptr[gsl_vector_complex] * ptr[gsl_complex] -> int;
  fun gsl_blas_zgemm: CBLAS_TRANSPOSE_t * CBLAS_TRANSPOSE_t * gsl_complex * cptr[gsl_matrix_complex] * cptr[gsl_matrix_complex] * gsl_complex * ptr[gsl_matrix_complex] -> int;
  fun gsl_blas_zgemv: CBLAS_TRANSPOSE_t * gsl_complex * cptr[gsl_matrix_complex] * cptr[gsl_vector_complex] * gsl_complex * ptr[gsl_vector_complex] -> int;
  fun gsl_blas_zgerc: gsl_complex * cptr[gsl_vector_complex] * cptr[gsl_vector_complex] * ptr[gsl_matrix_complex] -> int;
  fun gsl_blas_zgeru: gsl_complex * cptr[gsl_vector_complex] * cptr[gsl_vector_complex] * ptr[gsl_matrix_complex] -> int;
  fun gsl_blas_zhemm: CBLAS_SIDE_t * CBLAS_UPLO_t * gsl_complex * cptr[gsl_matrix_complex] * cptr[gsl_matrix_complex] * gsl_complex * ptr[gsl_matrix_complex] -> int;
  fun gsl_blas_zhemv: CBLAS_UPLO_t * gsl_complex * cptr[gsl_matrix_complex] * cptr[gsl_vector_complex] * gsl_complex * ptr[gsl_vector_complex] -> int;
  fun gsl_blas_zher: CBLAS_UPLO_t * double * cptr[gsl_vector_complex] * ptr[gsl_matrix_complex] -> int;
  fun gsl_blas_zher2: CBLAS_UPLO_t * gsl_complex * cptr[gsl_vector_complex] * cptr[gsl_vector_complex] * ptr[gsl_matrix_complex] -> int;
  fun gsl_blas_zher2k: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * gsl_complex * cptr[gsl_matrix_complex] * cptr[gsl_matrix_complex] * double * ptr[gsl_matrix_complex] -> int;
  fun gsl_blas_zherk: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * double * cptr[gsl_matrix_complex] * double * ptr[gsl_matrix_complex] -> int;
  fun gsl_blas_zswap: ptr[gsl_vector_complex] * ptr[gsl_vector_complex] -> int;
  fun gsl_blas_zsymm: CBLAS_SIDE_t * CBLAS_UPLO_t * gsl_complex * cptr[gsl_matrix_complex] * cptr[gsl_matrix_complex] * gsl_complex * ptr[gsl_matrix_complex] -> int;
  fun gsl_blas_zsyr2k: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * gsl_complex * cptr[gsl_matrix_complex] * cptr[gsl_matrix_complex] * gsl_complex * ptr[gsl_matrix_complex] -> int;
  fun gsl_blas_zsyrk: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * gsl_complex * cptr[gsl_matrix_complex] * gsl_complex * ptr[gsl_matrix_complex] -> int;
  fun gsl_blas_ztrmm: CBLAS_SIDE_t * CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * CBLAS_DIAG_t * gsl_complex * cptr[gsl_matrix_complex] * ptr[gsl_matrix_complex] -> int;
  fun gsl_blas_ztrmv: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * CBLAS_DIAG_t * cptr[gsl_matrix_complex] * ptr[gsl_vector_complex] -> int;
  fun gsl_blas_ztrsm: CBLAS_SIDE_t * CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * CBLAS_DIAG_t * gsl_complex * cptr[gsl_matrix_complex] * ptr[gsl_matrix_complex] -> int;
  fun gsl_blas_ztrsv: CBLAS_UPLO_t * CBLAS_TRANSPOSE_t * CBLAS_DIAG_t * cptr[gsl_matrix_complex] * ptr[gsl_vector_complex] -> int;
}
