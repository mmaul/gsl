//Module        : gsl_matrix_ulong_h
//Timestamp     : 2006/3/29 3:52:26 UTC
//Timestamp     : 2006/3/29 14:52:26 (local)
//Raw Header    : gsl_matrix_ulong.h
//Preprocessor  : gcc -E
//Input file: gsl.flxcc.i
//Flxcc Control : gsl.flxcc
//Felix Version : 1.1.2_rc7
include 'std';

//#define __GSL_MATRIX_ULONG_H__
header '#include <gsl/gsl_matrix_ulong.h>';

//INCLUDES
include "gsl_block_ulong_lib";
include "gsl_vector_ulong_lib";

class gsl_matrix_ulong_h
{
  open C_hack;
  open gsl_block_ulong_h;
  open gsl_vector_ulong_h;

  //ABSTRACT TYPES
  type gsl_matrix_ulong = 'gsl_matrix_ulong';
  type _gsl_matrix_ulong_const_view = '_gsl_matrix_ulong_const_view';
  type _gsl_matrix_ulong_view = '_gsl_matrix_ulong_view';

  //TYPE ALIASES
  typedef gsl_matrix_ulong_const_view = _gsl_matrix_ulong_const_view;
  typedef gsl_matrix_ulong_view = _gsl_matrix_ulong_view;

  //PROCEDURES
  proc gsl_matrix_ulong_free: ptr[gsl_matrix_ulong];
  proc gsl_matrix_ulong_max_index: cptr[gsl_matrix_ulong] * ptr[size] * ptr[size];
  proc gsl_matrix_ulong_min_index: cptr[gsl_matrix_ulong] * ptr[size] * ptr[size];
  proc gsl_matrix_ulong_minmax: cptr[gsl_matrix_ulong] * ptr[ulong] * ptr[ulong];
  proc gsl_matrix_ulong_minmax_index: cptr[gsl_matrix_ulong] * ptr[size] * ptr[size] * ptr[size] * ptr[size];
  proc gsl_matrix_ulong_set: ptr[gsl_matrix_ulong] * size * size * ulong;
  proc gsl_matrix_ulong_set_all: ptr[gsl_matrix_ulong] * ulong;
  proc gsl_matrix_ulong_set_identity: ptr[gsl_matrix_ulong];
  proc gsl_matrix_ulong_set_zero: ptr[gsl_matrix_ulong];

  //FUNCTIONS
  fun gsl_matrix_ulong_add: ptr[gsl_matrix_ulong] * cptr[gsl_matrix_ulong] -> int;
  fun gsl_matrix_ulong_add_constant: ptr[gsl_matrix_ulong] * double -> int;
  fun gsl_matrix_ulong_add_diagonal: ptr[gsl_matrix_ulong] * double -> int;
  fun gsl_matrix_ulong_alloc: size * size -> ptr[gsl_matrix_ulong];
  fun gsl_matrix_ulong_alloc_from_block: ptr[gsl_block_ulong] * size * size * size * size -> ptr[gsl_matrix_ulong];
  fun gsl_matrix_ulong_alloc_from_matrix: ptr[gsl_matrix_ulong] * size * size * size * size -> ptr[gsl_matrix_ulong];
  fun gsl_matrix_ulong_calloc: size * size -> ptr[gsl_matrix_ulong];
  fun gsl_matrix_ulong_column: ptr[gsl_matrix_ulong] * size -> _gsl_vector_ulong_view;
  fun gsl_matrix_ulong_const_column: cptr[gsl_matrix_ulong] * size -> _gsl_vector_ulong_const_view;
  fun gsl_matrix_ulong_const_diagonal: cptr[gsl_matrix_ulong] -> _gsl_vector_ulong_const_view;
  fun gsl_matrix_ulong_const_ptr: cptr[gsl_matrix_ulong] * size * size -> cptr[ulong];
  fun gsl_matrix_ulong_const_row: cptr[gsl_matrix_ulong] * size -> _gsl_vector_ulong_const_view;
  fun gsl_matrix_ulong_const_subdiagonal: cptr[gsl_matrix_ulong] * size -> _gsl_vector_ulong_const_view;
  fun gsl_matrix_ulong_const_submatrix: cptr[gsl_matrix_ulong] * size * size * size * size -> _gsl_matrix_ulong_const_view;
  fun gsl_matrix_ulong_const_superdiagonal: cptr[gsl_matrix_ulong] * size -> _gsl_vector_ulong_const_view;
  fun gsl_matrix_ulong_const_view_array: cptr[ulong] * size * size -> _gsl_matrix_ulong_const_view;
  fun gsl_matrix_ulong_const_view_array_with_tda: cptr[ulong] * size * size * size -> _gsl_matrix_ulong_const_view;
  fun gsl_matrix_ulong_const_view_vector: cptr[gsl_vector_ulong] * size * size -> _gsl_matrix_ulong_const_view;
  fun gsl_matrix_ulong_const_view_vector_with_tda: cptr[gsl_vector_ulong] * size * size * size -> _gsl_matrix_ulong_const_view;
  fun gsl_matrix_ulong_diagonal: ptr[gsl_matrix_ulong] -> _gsl_vector_ulong_view;
  fun gsl_matrix_ulong_div_elements: ptr[gsl_matrix_ulong] * cptr[gsl_matrix_ulong] -> int;
  fun gsl_matrix_ulong_fprintf: ptr[FILE] * cptr[gsl_matrix_ulong] * cptr[char] -> int;
  fun gsl_matrix_ulong_fread: ptr[FILE] * ptr[gsl_matrix_ulong] -> int;
  fun gsl_matrix_ulong_fscanf: ptr[FILE] * ptr[gsl_matrix_ulong] -> int;
  fun gsl_matrix_ulong_fwrite: ptr[FILE] * cptr[gsl_matrix_ulong] -> int;
  fun gsl_matrix_ulong_get: cptr[gsl_matrix_ulong] * size * size -> ulong;
  fun gsl_matrix_ulong_get_col: ptr[gsl_vector_ulong] * cptr[gsl_matrix_ulong] * size -> int;
  fun gsl_matrix_ulong_get_row: ptr[gsl_vector_ulong] * cptr[gsl_matrix_ulong] * size -> int;
  fun gsl_matrix_ulong_isnull: cptr[gsl_matrix_ulong] -> int;
  fun gsl_matrix_ulong_max: cptr[gsl_matrix_ulong] -> ulong;
  fun gsl_matrix_ulong_memcpy: ptr[gsl_matrix_ulong] * cptr[gsl_matrix_ulong] -> int;
  fun gsl_matrix_ulong_min: cptr[gsl_matrix_ulong] -> ulong;
  fun gsl_matrix_ulong_mul_elements: ptr[gsl_matrix_ulong] * cptr[gsl_matrix_ulong] -> int;
  fun gsl_matrix_ulong_ptr: ptr[gsl_matrix_ulong] * size * size -> ptr[ulong];
  fun gsl_matrix_ulong_row: ptr[gsl_matrix_ulong] * size -> _gsl_vector_ulong_view;
  fun gsl_matrix_ulong_scale: ptr[gsl_matrix_ulong] * double -> int;
  fun gsl_matrix_ulong_set_col: ptr[gsl_matrix_ulong] * size * cptr[gsl_vector_ulong] -> int;
  fun gsl_matrix_ulong_set_row: ptr[gsl_matrix_ulong] * size * cptr[gsl_vector_ulong] -> int;
  fun gsl_matrix_ulong_sub: ptr[gsl_matrix_ulong] * cptr[gsl_matrix_ulong] -> int;
  fun gsl_matrix_ulong_subdiagonal: ptr[gsl_matrix_ulong] * size -> _gsl_vector_ulong_view;
  fun gsl_matrix_ulong_submatrix: ptr[gsl_matrix_ulong] * size * size * size * size -> _gsl_matrix_ulong_view;
  fun gsl_matrix_ulong_superdiagonal: ptr[gsl_matrix_ulong] * size -> _gsl_vector_ulong_view;
  fun gsl_matrix_ulong_swap: ptr[gsl_matrix_ulong] * ptr[gsl_matrix_ulong] -> int;
  fun gsl_matrix_ulong_swap_columns: ptr[gsl_matrix_ulong] * size * size -> int;
  fun gsl_matrix_ulong_swap_rowcol: ptr[gsl_matrix_ulong] * size * size -> int;
  fun gsl_matrix_ulong_swap_rows: ptr[gsl_matrix_ulong] * size * size -> int;
  fun gsl_matrix_ulong_transpose: ptr[gsl_matrix_ulong] -> int;
  fun gsl_matrix_ulong_transpose_memcpy: ptr[gsl_matrix_ulong] * cptr[gsl_matrix_ulong] -> int;
  fun gsl_matrix_ulong_view_array: ptr[ulong] * size * size -> _gsl_matrix_ulong_view;
  fun gsl_matrix_ulong_view_array_with_tda: ptr[ulong] * size * size * size -> _gsl_matrix_ulong_view;
  fun gsl_matrix_ulong_view_vector: ptr[gsl_vector_ulong] * size * size -> _gsl_matrix_ulong_view;
  fun gsl_matrix_ulong_view_vector_with_tda: ptr[gsl_vector_ulong] * size * size * size -> _gsl_matrix_ulong_view;
  fun gsl_vector_ulong_alloc_col_from_matrix: ptr[gsl_matrix_ulong] * size -> ptr[gsl_vector_ulong];
  fun gsl_vector_ulong_alloc_row_from_matrix: ptr[gsl_matrix_ulong] * size -> ptr[gsl_vector_ulong];
}
