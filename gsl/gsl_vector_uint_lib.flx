//Module        : gsl_vector_uint_h
//Timestamp     : 2006/3/29 3:52:26 UTC
//Timestamp     : 2006/3/29 14:52:26 (local)
//Raw Header    : gsl_vector_uint.h
//Preprocessor  : gcc -E
//Input file: gsl.flxcc.i
//Flxcc Control : gsl.flxcc
//Felix Version : 1.1.2_rc7
include 'std';

//#define __GSL_VECTOR_UINT_H__
header '#include <gsl/gsl_vector_uint.h>';

//INCLUDES
include "gsl_block_uint_lib";

class gsl_vector_uint_h
{
  open C_hack;
  open gsl_block_uint_h;

  //ABSTRACT TYPES
  type gsl_vector_uint = 'gsl_vector_uint';
  type _gsl_vector_uint_view = '_gsl_vector_uint_view';
  type _gsl_vector_uint_const_view = '_gsl_vector_uint_const_view';

  //TYPE ALIASES
  typedef gsl_vector_uint_const_view = _gsl_vector_uint_const_view;
  typedef gsl_vector_uint_view = _gsl_vector_uint_view;

  //PROCEDURES
  proc gsl_vector_uint_free: ptr[gsl_vector_uint];
  proc gsl_vector_uint_minmax: cptr[gsl_vector_uint] * ptr[uint] * ptr[uint];
  proc gsl_vector_uint_minmax_index: cptr[gsl_vector_uint] * ptr[size] * ptr[size];
  proc gsl_vector_uint_set: ptr[gsl_vector_uint] * size * uint;
  proc gsl_vector_uint_set_all: ptr[gsl_vector_uint] * uint;
  proc gsl_vector_uint_set_zero: ptr[gsl_vector_uint];

  //FUNCTIONS
  fun gsl_vector_uint_add: ptr[gsl_vector_uint] * cptr[gsl_vector_uint] -> int;
  fun gsl_vector_uint_add_constant: ptr[gsl_vector_uint] * double -> int;
  fun gsl_vector_uint_alloc: size -> ptr[gsl_vector_uint];
  fun gsl_vector_uint_alloc_from_block: ptr[gsl_block_uint] * size * size * size -> ptr[gsl_vector_uint];
  fun gsl_vector_uint_alloc_from_vector: ptr[gsl_vector_uint] * size * size * size -> ptr[gsl_vector_uint];
  fun gsl_vector_uint_calloc: size -> ptr[gsl_vector_uint];
  fun gsl_vector_uint_const_ptr: cptr[gsl_vector_uint] * size -> cptr[uint];
  fun gsl_vector_uint_const_subvector: cptr[gsl_vector_uint] * size * size -> _gsl_vector_uint_const_view;
  fun gsl_vector_uint_const_subvector_with_stride: cptr[gsl_vector_uint] * size * size * size -> _gsl_vector_uint_const_view;
  fun gsl_vector_uint_const_view_array: cptr[uint] * size -> _gsl_vector_uint_const_view;
  fun gsl_vector_uint_const_view_array_with_stride: cptr[uint] * size * size -> _gsl_vector_uint_const_view;
  fun gsl_vector_uint_div: ptr[gsl_vector_uint] * cptr[gsl_vector_uint] -> int;
  fun gsl_vector_uint_fprintf: ptr[FILE] * cptr[gsl_vector_uint] * cptr[char] -> int;
  fun gsl_vector_uint_fread: ptr[FILE] * ptr[gsl_vector_uint] -> int;
  fun gsl_vector_uint_fscanf: ptr[FILE] * ptr[gsl_vector_uint] -> int;
  fun gsl_vector_uint_fwrite: ptr[FILE] * cptr[gsl_vector_uint] -> int;
  fun gsl_vector_uint_get: cptr[gsl_vector_uint] * size -> uint;
  fun gsl_vector_uint_isnull: cptr[gsl_vector_uint] -> int;
  fun gsl_vector_uint_max: cptr[gsl_vector_uint] -> uint;
  fun gsl_vector_uint_max_index: cptr[gsl_vector_uint] -> size;
  fun gsl_vector_uint_memcpy: ptr[gsl_vector_uint] * cptr[gsl_vector_uint] -> int;
  fun gsl_vector_uint_min: cptr[gsl_vector_uint] -> uint;
  fun gsl_vector_uint_min_index: cptr[gsl_vector_uint] -> size;
  fun gsl_vector_uint_mul: ptr[gsl_vector_uint] * cptr[gsl_vector_uint] -> int;
  fun gsl_vector_uint_ptr: ptr[gsl_vector_uint] * size -> ptr[uint];
  fun gsl_vector_uint_reverse: ptr[gsl_vector_uint] -> int;
  fun gsl_vector_uint_scale: ptr[gsl_vector_uint] * double -> int;
  fun gsl_vector_uint_set_basis: ptr[gsl_vector_uint] * size -> int;
  fun gsl_vector_uint_sub: ptr[gsl_vector_uint] * cptr[gsl_vector_uint] -> int;
  fun gsl_vector_uint_subvector: ptr[gsl_vector_uint] * size * size -> _gsl_vector_uint_view;
  fun gsl_vector_uint_subvector_with_stride: ptr[gsl_vector_uint] * size * size * size -> _gsl_vector_uint_view;
  fun gsl_vector_uint_swap: ptr[gsl_vector_uint] * ptr[gsl_vector_uint] -> int;
  fun gsl_vector_uint_swap_elements: ptr[gsl_vector_uint] * size * size -> int;
  fun gsl_vector_uint_view_array: ptr[uint] * size -> _gsl_vector_uint_view;
  fun gsl_vector_uint_view_array_with_stride: ptr[uint] * size * size -> _gsl_vector_uint_view;
}
