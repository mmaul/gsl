//Module        : gsl_vector_long_double_h
//Timestamp     : 2006/3/29 3:52:26 UTC
//Timestamp     : 2006/3/29 14:52:26 (local)
//Raw Header    : gsl_vector_long_double.h
//Preprocessor  : gcc -E
//Input file: gsl.flxcc.i
//Flxcc Control : gsl.flxcc
//Felix Version : 1.1.2_rc7
include 'std';

//#define __GSL_VECTOR_LONG_DOUBLE_H__
header '#include <gsl/gsl_vector_long_double.h>';

//INCLUDES
include "gsl_block_long_double_lib";

class gsl_vector_long_double_h
{
  open C_hack;
  open gsl_block_long_double_h;

  //ABSTRACT TYPES
  type _gsl_vector_long_double_const_view = '_gsl_vector_long_double_const_view';
  type _gsl_vector_long_double_view = '_gsl_vector_long_double_view';
  type gsl_vector_long_double = 'gsl_vector_long_double';

  //TYPE ALIASES
  typedef gsl_vector_long_double_view = _gsl_vector_long_double_view;
  typedef gsl_vector_long_double_const_view = _gsl_vector_long_double_const_view;

  //PROCEDURES
  proc gsl_vector_long_double_free: ptr[gsl_vector_long_double];
  proc gsl_vector_long_double_minmax: cptr[gsl_vector_long_double] * ptr[ldouble] * ptr[ldouble];
  proc gsl_vector_long_double_minmax_index: cptr[gsl_vector_long_double] * ptr[size] * ptr[size];
  proc gsl_vector_long_double_set: ptr[gsl_vector_long_double] * size * ldouble;
  proc gsl_vector_long_double_set_all: ptr[gsl_vector_long_double] * ldouble;
  proc gsl_vector_long_double_set_zero: ptr[gsl_vector_long_double];

  //FUNCTIONS
  fun gsl_vector_long_double_add: ptr[gsl_vector_long_double] * cptr[gsl_vector_long_double] -> int;
  fun gsl_vector_long_double_add_constant: ptr[gsl_vector_long_double] * double -> int;
  fun gsl_vector_long_double_alloc: size -> ptr[gsl_vector_long_double];
  fun gsl_vector_long_double_alloc_from_block: ptr[gsl_block_long_double] * size * size * size -> ptr[gsl_vector_long_double];
  fun gsl_vector_long_double_alloc_from_vector: ptr[gsl_vector_long_double] * size * size * size -> ptr[gsl_vector_long_double];
  fun gsl_vector_long_double_calloc: size -> ptr[gsl_vector_long_double];
  fun gsl_vector_long_double_const_ptr: cptr[gsl_vector_long_double] * size -> cptr[ldouble];
  fun gsl_vector_long_double_const_subvector: cptr[gsl_vector_long_double] * size * size -> _gsl_vector_long_double_const_view;
  fun gsl_vector_long_double_const_subvector_with_stride: cptr[gsl_vector_long_double] * size * size * size -> _gsl_vector_long_double_const_view;
  fun gsl_vector_long_double_const_view_array: cptr[ldouble] * size -> _gsl_vector_long_double_const_view;
  fun gsl_vector_long_double_const_view_array_with_stride: cptr[ldouble] * size * size -> _gsl_vector_long_double_const_view;
  fun gsl_vector_long_double_div: ptr[gsl_vector_long_double] * cptr[gsl_vector_long_double] -> int;
  fun gsl_vector_long_double_fprintf: ptr[FILE] * cptr[gsl_vector_long_double] * cptr[char] -> int;
  fun gsl_vector_long_double_fread: ptr[FILE] * ptr[gsl_vector_long_double] -> int;
  fun gsl_vector_long_double_fscanf: ptr[FILE] * ptr[gsl_vector_long_double] -> int;
  fun gsl_vector_long_double_fwrite: ptr[FILE] * cptr[gsl_vector_long_double] -> int;
  fun gsl_vector_long_double_get: cptr[gsl_vector_long_double] * size -> ldouble;
  fun gsl_vector_long_double_isnull: cptr[gsl_vector_long_double] -> int;
  fun gsl_vector_long_double_max: cptr[gsl_vector_long_double] -> ldouble;
  fun gsl_vector_long_double_max_index: cptr[gsl_vector_long_double] -> size;
  fun gsl_vector_long_double_memcpy: ptr[gsl_vector_long_double] * cptr[gsl_vector_long_double] -> int;
  fun gsl_vector_long_double_min: cptr[gsl_vector_long_double] -> ldouble;
  fun gsl_vector_long_double_min_index: cptr[gsl_vector_long_double] -> size;
  fun gsl_vector_long_double_mul: ptr[gsl_vector_long_double] * cptr[gsl_vector_long_double] -> int;
  fun gsl_vector_long_double_ptr: ptr[gsl_vector_long_double] * size -> ptr[ldouble];
  fun gsl_vector_long_double_reverse: ptr[gsl_vector_long_double] -> int;
  fun gsl_vector_long_double_scale: ptr[gsl_vector_long_double] * double -> int;
  fun gsl_vector_long_double_set_basis: ptr[gsl_vector_long_double] * size -> int;
  fun gsl_vector_long_double_sub: ptr[gsl_vector_long_double] * cptr[gsl_vector_long_double] -> int;
  fun gsl_vector_long_double_subvector: ptr[gsl_vector_long_double] * size * size -> _gsl_vector_long_double_view;
  fun gsl_vector_long_double_subvector_with_stride: ptr[gsl_vector_long_double] * size * size * size -> _gsl_vector_long_double_view;
  fun gsl_vector_long_double_swap: ptr[gsl_vector_long_double] * ptr[gsl_vector_long_double] -> int;
  fun gsl_vector_long_double_swap_elements: ptr[gsl_vector_long_double] * size * size -> int;
  fun gsl_vector_long_double_view_array: ptr[ldouble] * size -> _gsl_vector_long_double_view;
  fun gsl_vector_long_double_view_array_with_stride: ptr[ldouble] * size * size -> _gsl_vector_long_double_view;
}
