//Module        : gsl_vector_ulong_h
//Timestamp     : 2006/3/29 3:52:26 UTC
//Timestamp     : 2006/3/29 14:52:26 (local)
//Raw Header    : gsl_vector_ulong.h
//Preprocessor  : gcc -E
//Input file: gsl.flxcc.i
//Flxcc Control : gsl.flxcc
//Felix Version : 1.1.2_rc7
include 'std';

//#define __GSL_VECTOR_ULONG_H__
header '#include <gsl/gsl_vector_ulong.h>';

//INCLUDES
include "gsl_block_ulong_lib";

class gsl_vector_ulong_h
{
  open C_hack;
  open gsl_block_ulong_h;

  //ABSTRACT TYPES
  type _gsl_vector_ulong_view = '_gsl_vector_ulong_view';
  type _gsl_vector_ulong_const_view = '_gsl_vector_ulong_const_view';
  type gsl_vector_ulong = 'gsl_vector_ulong';

  //TYPE ALIASES
  typedef gsl_vector_ulong_view = _gsl_vector_ulong_view;
  typedef gsl_vector_ulong_const_view = _gsl_vector_ulong_const_view;

  //PROCEDURES
  proc gsl_vector_ulong_free: ptr[gsl_vector_ulong];
  proc gsl_vector_ulong_minmax: cptr[gsl_vector_ulong] * ptr[ulong] * ptr[ulong];
  proc gsl_vector_ulong_minmax_index: cptr[gsl_vector_ulong] * ptr[size] * ptr[size];
  proc gsl_vector_ulong_set: ptr[gsl_vector_ulong] * size * ulong;
  proc gsl_vector_ulong_set_all: ptr[gsl_vector_ulong] * ulong;
  proc gsl_vector_ulong_set_zero: ptr[gsl_vector_ulong];

  //FUNCTIONS
  fun gsl_vector_ulong_add: ptr[gsl_vector_ulong] * cptr[gsl_vector_ulong] -> int;
  fun gsl_vector_ulong_add_constant: ptr[gsl_vector_ulong] * double -> int;
  fun gsl_vector_ulong_alloc: size -> ptr[gsl_vector_ulong];
  fun gsl_vector_ulong_alloc_from_block: ptr[gsl_block_ulong] * size * size * size -> ptr[gsl_vector_ulong];
  fun gsl_vector_ulong_alloc_from_vector: ptr[gsl_vector_ulong] * size * size * size -> ptr[gsl_vector_ulong];
  fun gsl_vector_ulong_calloc: size -> ptr[gsl_vector_ulong];
  fun gsl_vector_ulong_const_ptr: cptr[gsl_vector_ulong] * size -> cptr[ulong];
  fun gsl_vector_ulong_const_subvector: cptr[gsl_vector_ulong] * size * size -> _gsl_vector_ulong_const_view;
  fun gsl_vector_ulong_const_subvector_with_stride: cptr[gsl_vector_ulong] * size * size * size -> _gsl_vector_ulong_const_view;
  fun gsl_vector_ulong_const_view_array: cptr[ulong] * size -> _gsl_vector_ulong_const_view;
  fun gsl_vector_ulong_const_view_array_with_stride: cptr[ulong] * size * size -> _gsl_vector_ulong_const_view;
  fun gsl_vector_ulong_div: ptr[gsl_vector_ulong] * cptr[gsl_vector_ulong] -> int;
  fun gsl_vector_ulong_fprintf: ptr[FILE] * cptr[gsl_vector_ulong] * cptr[char] -> int;
  fun gsl_vector_ulong_fread: ptr[FILE] * ptr[gsl_vector_ulong] -> int;
  fun gsl_vector_ulong_fscanf: ptr[FILE] * ptr[gsl_vector_ulong] -> int;
  fun gsl_vector_ulong_fwrite: ptr[FILE] * cptr[gsl_vector_ulong] -> int;
  fun gsl_vector_ulong_get: cptr[gsl_vector_ulong] * size -> ulong;
  fun gsl_vector_ulong_isnull: cptr[gsl_vector_ulong] -> int;
  fun gsl_vector_ulong_max: cptr[gsl_vector_ulong] -> ulong;
  fun gsl_vector_ulong_max_index: cptr[gsl_vector_ulong] -> size;
  fun gsl_vector_ulong_memcpy: ptr[gsl_vector_ulong] * cptr[gsl_vector_ulong] -> int;
  fun gsl_vector_ulong_min: cptr[gsl_vector_ulong] -> ulong;
  fun gsl_vector_ulong_min_index: cptr[gsl_vector_ulong] -> size;
  fun gsl_vector_ulong_mul: ptr[gsl_vector_ulong] * cptr[gsl_vector_ulong] -> int;
  fun gsl_vector_ulong_ptr: ptr[gsl_vector_ulong] * size -> ptr[ulong];
  fun gsl_vector_ulong_reverse: ptr[gsl_vector_ulong] -> int;
  fun gsl_vector_ulong_scale: ptr[gsl_vector_ulong] * double -> int;
  fun gsl_vector_ulong_set_basis: ptr[gsl_vector_ulong] * size -> int;
  fun gsl_vector_ulong_sub: ptr[gsl_vector_ulong] * cptr[gsl_vector_ulong] -> int;
  fun gsl_vector_ulong_subvector: ptr[gsl_vector_ulong] * size * size -> _gsl_vector_ulong_view;
  fun gsl_vector_ulong_subvector_with_stride: ptr[gsl_vector_ulong] * size * size * size -> _gsl_vector_ulong_view;
  fun gsl_vector_ulong_swap: ptr[gsl_vector_ulong] * ptr[gsl_vector_ulong] -> int;
  fun gsl_vector_ulong_swap_elements: ptr[gsl_vector_ulong] * size * size -> int;
  fun gsl_vector_ulong_view_array: ptr[ulong] * size -> _gsl_vector_ulong_view;
  fun gsl_vector_ulong_view_array_with_stride: ptr[ulong] * size * size -> _gsl_vector_ulong_view;
}
