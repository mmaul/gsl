//Module        : gsl_permutation_h
//Timestamp     : 2006/3/29 3:52:26 UTC
//Timestamp     : 2006/3/29 14:52:26 (local)
//Raw Header    : gsl_permutation.h
//Preprocessor  : gcc -E
//Input file: gsl.flxcc.i
//Flxcc Control : gsl.flxcc
//Felix Version : 1.1.2_rc7
include 'std';

//#define __GSL_PERMUTATION_H__
header '#include <gsl/gsl_permutation.h>';

//INCLUDES
include "gsl_permutation_struct_lib";

class gsl_permutation_h
{
  open C_hack;
  open gsl_permutation_struct_h;

  //CSTRUCTS
  cstruct gsl_permutation_struct {
    size: size;
    data: ptr[size];
  }

  //STRUCT or UNION TAG ALIASES
  typedef gsl_permutation = gsl_permutation_struct;

  //TYPE ALIASES
  typedef _struct_gsl_permutation_struct = gsl_permutation_struct;

  //PROCEDURES
  proc gsl_permutation_free: ptr[gsl_permutation];
  proc gsl_permutation_init: ptr[gsl_permutation];
  proc gsl_permutation_reverse: ptr[gsl_permutation];

  //FUNCTIONS
  fun gsl_permutation_alloc: size -> ptr[gsl_permutation];
  fun gsl_permutation_calloc: size -> ptr[gsl_permutation];
  fun gsl_permutation_canonical_cycles: cptr[gsl_permutation] -> size;
  fun gsl_permutation_canonical_to_linear: ptr[gsl_permutation] * cptr[gsl_permutation] -> int;
  fun gsl_permutation_data: cptr[gsl_permutation] -> ptr[size];
  fun gsl_permutation_fprintf: ptr[FILE] * cptr[gsl_permutation] * cptr[char] -> int;
  fun gsl_permutation_fread: ptr[FILE] * ptr[gsl_permutation] -> int;
  fun gsl_permutation_fscanf: ptr[FILE] * ptr[gsl_permutation] -> int;
  fun gsl_permutation_fwrite: ptr[FILE] * cptr[gsl_permutation] -> int;
  fun gsl_permutation_get: cptr[gsl_permutation] * size -> size;
  fun gsl_permutation_inverse: ptr[gsl_permutation] * cptr[gsl_permutation] -> int;
  fun gsl_permutation_inversions: cptr[gsl_permutation] -> size;
  fun gsl_permutation_linear_cycles: cptr[gsl_permutation] -> size;
  fun gsl_permutation_linear_to_canonical: ptr[gsl_permutation] * cptr[gsl_permutation] -> int;
  fun gsl_permutation_memcpy: ptr[gsl_permutation] * cptr[gsl_permutation] -> int;
  fun gsl_permutation_mul: ptr[gsl_permutation] * cptr[gsl_permutation] * cptr[gsl_permutation] -> int;
  fun gsl_permutation_next: ptr[gsl_permutation] -> int;
  fun gsl_permutation_prev: ptr[gsl_permutation] -> int;
  fun gsl_permutation_size: cptr[gsl_permutation] -> size;
  fun gsl_permutation_swap: ptr[gsl_permutation] * size * size -> int;
  fun gsl_permutation_valid: ptr[gsl_permutation] -> int;
}
