//Module        : gsl_chebyshev_h
//Timestamp     : 2006/3/29 3:52:26 UTC
//Timestamp     : 2006/3/29 14:52:26 (local)
//Raw Header    : gsl_chebyshev.h
//Preprocessor  : gcc -E
//Input file: gsl.flxcc.i
//Flxcc Control : gsl.flxcc
//Felix Version : 1.1.2_rc7
include 'std';

//#define __GSL_CHEBYSHEV_H__
header '#include <gsl/gsl_chebyshev.h>';

//INCLUDES
include "gsl_cheb_series_struct_lib";
include "gsl_math_lib";
include "gsl_mode_lib";

class gsl_chebyshev_h
{
  open C_hack;
  open gsl_cheb_series_struct_h;
  open gsl_math_h;
  open gsl_mode_h;

  //CSTRUCTS
  cstruct gsl_cheb_series_struct {
    c: ptr[double];
    order: size;
    a: double;
    b: double;
    order_sp: size;
    f: ptr[double];
  }

  //STRUCT or UNION TAG ALIASES
  typedef gsl_cheb_series = gsl_cheb_series_struct;

  //TYPE ALIASES
  typedef _struct_gsl_cheb_series_struct = gsl_cheb_series_struct;

  //PROCEDURES
  proc gsl_cheb_free: ptr[gsl_cheb_series];

  //FUNCTIONS
  fun gsl_cheb_alloc: size -> ptr[gsl_cheb_series];
  fun gsl_cheb_calc_deriv: ptr[gsl_cheb_series] * cptr[gsl_cheb_series] -> int;
  fun gsl_cheb_calc_integ: ptr[gsl_cheb_series] * cptr[gsl_cheb_series] -> int;
  fun gsl_cheb_eval: cptr[gsl_cheb_series] * double -> double;
  fun gsl_cheb_eval_err: cptr[gsl_cheb_series] * double * ptr[double] * ptr[double] -> int;
  fun gsl_cheb_eval_mode: cptr[gsl_cheb_series] * double * gsl_mode_t -> double;
  fun gsl_cheb_eval_mode_e: cptr[gsl_cheb_series] * double * gsl_mode_t * ptr[double] * ptr[double] -> int;
  fun gsl_cheb_eval_n: cptr[gsl_cheb_series] * size * double -> double;
  fun gsl_cheb_eval_n_err: cptr[gsl_cheb_series] * size * double * ptr[double] * ptr[double] -> int;
  fun gsl_cheb_init: ptr[gsl_cheb_series] * cptr[gsl_function] * double * double -> int;
}
