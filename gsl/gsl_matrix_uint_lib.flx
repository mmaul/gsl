//Module        : gsl_matrix_uint_h
//Timestamp     : 2006/3/29 3:52:26 UTC
//Timestamp     : 2006/3/29 14:52:26 (local)
//Raw Header    : gsl_matrix_uint.h
//Preprocessor  : gcc -E
//Input file: gsl.flxcc.i
//Flxcc Control : gsl.flxcc
//Felix Version : 1.1.2_rc7
include 'std';

//#define __GSL_MATRIX_UINT_H__
header '#include <gsl/gsl_matrix_uint.h>';

//INCLUDES
include "gsl_block_uint_lib";
include "gsl_vector_uint_lib";

class gsl_matrix_uint_h
{
  open C_hack;
  open gsl_block_uint_h;
  open gsl_vector_uint_h;

  //ABSTRACT TYPES
  type gsl_matrix_uint = 'gsl_matrix_uint';
  type _gsl_matrix_uint_const_view = '_gsl_matrix_uint_const_view';
  type _gsl_matrix_uint_view = '_gsl_matrix_uint_view';

  //TYPE ALIASES
  typedef gsl_matrix_uint_view = _gsl_matrix_uint_view;
  typedef gsl_matrix_uint_const_view = _gsl_matrix_uint_const_view;

  //PROCEDURES
  proc gsl_matrix_uint_free: ptr[gsl_matrix_uint];
  proc gsl_matrix_uint_max_index: cptr[gsl_matrix_uint] * ptr[size] * ptr[size];
  proc gsl_matrix_uint_min_index: cptr[gsl_matrix_uint] * ptr[size] * ptr[size];
  proc gsl_matrix_uint_minmax: cptr[gsl_matrix_uint] * ptr[uint] * ptr[uint];
  proc gsl_matrix_uint_minmax_index: cptr[gsl_matrix_uint] * ptr[size] * ptr[size] * ptr[size] * ptr[size];
  proc gsl_matrix_uint_set: ptr[gsl_matrix_uint] * size * size * uint;
  proc gsl_matrix_uint_set_all: ptr[gsl_matrix_uint] * uint;
  proc gsl_matrix_uint_set_identity: ptr[gsl_matrix_uint];
  proc gsl_matrix_uint_set_zero: ptr[gsl_matrix_uint];

  //FUNCTIONS
  fun gsl_matrix_uint_add: ptr[gsl_matrix_uint] * cptr[gsl_matrix_uint] -> int;
  fun gsl_matrix_uint_add_constant: ptr[gsl_matrix_uint] * double -> int;
  fun gsl_matrix_uint_add_diagonal: ptr[gsl_matrix_uint] * double -> int;
  fun gsl_matrix_uint_alloc: size * size -> ptr[gsl_matrix_uint];
  fun gsl_matrix_uint_alloc_from_block: ptr[gsl_block_uint] * size * size * size * size -> ptr[gsl_matrix_uint];
  fun gsl_matrix_uint_alloc_from_matrix: ptr[gsl_matrix_uint] * size * size * size * size -> ptr[gsl_matrix_uint];
  fun gsl_matrix_uint_calloc: size * size -> ptr[gsl_matrix_uint];
  fun gsl_matrix_uint_column: ptr[gsl_matrix_uint] * size -> _gsl_vector_uint_view;
  fun gsl_matrix_uint_const_column: cptr[gsl_matrix_uint] * size -> _gsl_vector_uint_const_view;
  fun gsl_matrix_uint_const_diagonal: cptr[gsl_matrix_uint] -> _gsl_vector_uint_const_view;
  fun gsl_matrix_uint_const_ptr: cptr[gsl_matrix_uint] * size * size -> cptr[uint];
  fun gsl_matrix_uint_const_row: cptr[gsl_matrix_uint] * size -> _gsl_vector_uint_const_view;
  fun gsl_matrix_uint_const_subdiagonal: cptr[gsl_matrix_uint] * size -> _gsl_vector_uint_const_view;
  fun gsl_matrix_uint_const_submatrix: cptr[gsl_matrix_uint] * size * size * size * size -> _gsl_matrix_uint_const_view;
  fun gsl_matrix_uint_const_superdiagonal: cptr[gsl_matrix_uint] * size -> _gsl_vector_uint_const_view;
  fun gsl_matrix_uint_const_view_array: cptr[uint] * size * size -> _gsl_matrix_uint_const_view;
  fun gsl_matrix_uint_const_view_array_with_tda: cptr[uint] * size * size * size -> _gsl_matrix_uint_const_view;
  fun gsl_matrix_uint_const_view_vector: cptr[gsl_vector_uint] * size * size -> _gsl_matrix_uint_const_view;
  fun gsl_matrix_uint_const_view_vector_with_tda: cptr[gsl_vector_uint] * size * size * size -> _gsl_matrix_uint_const_view;
  fun gsl_matrix_uint_diagonal: ptr[gsl_matrix_uint] -> _gsl_vector_uint_view;
  fun gsl_matrix_uint_div_elements: ptr[gsl_matrix_uint] * cptr[gsl_matrix_uint] -> int;
  fun gsl_matrix_uint_fprintf: ptr[FILE] * cptr[gsl_matrix_uint] * cptr[char] -> int;
  fun gsl_matrix_uint_fread: ptr[FILE] * ptr[gsl_matrix_uint] -> int;
  fun gsl_matrix_uint_fscanf: ptr[FILE] * ptr[gsl_matrix_uint] -> int;
  fun gsl_matrix_uint_fwrite: ptr[FILE] * cptr[gsl_matrix_uint] -> int;
  fun gsl_matrix_uint_get: cptr[gsl_matrix_uint] * size * size -> uint;
  fun gsl_matrix_uint_get_col: ptr[gsl_vector_uint] * cptr[gsl_matrix_uint] * size -> int;
  fun gsl_matrix_uint_get_row: ptr[gsl_vector_uint] * cptr[gsl_matrix_uint] * size -> int;
  fun gsl_matrix_uint_isnull: cptr[gsl_matrix_uint] -> int;
  fun gsl_matrix_uint_max: cptr[gsl_matrix_uint] -> uint;
  fun gsl_matrix_uint_memcpy: ptr[gsl_matrix_uint] * cptr[gsl_matrix_uint] -> int;
  fun gsl_matrix_uint_min: cptr[gsl_matrix_uint] -> uint;
  fun gsl_matrix_uint_mul_elements: ptr[gsl_matrix_uint] * cptr[gsl_matrix_uint] -> int;
  fun gsl_matrix_uint_ptr: ptr[gsl_matrix_uint] * size * size -> ptr[uint];
  fun gsl_matrix_uint_row: ptr[gsl_matrix_uint] * size -> _gsl_vector_uint_view;
  fun gsl_matrix_uint_scale: ptr[gsl_matrix_uint] * double -> int;
  fun gsl_matrix_uint_set_col: ptr[gsl_matrix_uint] * size * cptr[gsl_vector_uint] -> int;
  fun gsl_matrix_uint_set_row: ptr[gsl_matrix_uint] * size * cptr[gsl_vector_uint] -> int;
  fun gsl_matrix_uint_sub: ptr[gsl_matrix_uint] * cptr[gsl_matrix_uint] -> int;
  fun gsl_matrix_uint_subdiagonal: ptr[gsl_matrix_uint] * size -> _gsl_vector_uint_view;
  fun gsl_matrix_uint_submatrix: ptr[gsl_matrix_uint] * size * size * size * size -> _gsl_matrix_uint_view;
  fun gsl_matrix_uint_superdiagonal: ptr[gsl_matrix_uint] * size -> _gsl_vector_uint_view;
  fun gsl_matrix_uint_swap: ptr[gsl_matrix_uint] * ptr[gsl_matrix_uint] -> int;
  fun gsl_matrix_uint_swap_columns: ptr[gsl_matrix_uint] * size * size -> int;
  fun gsl_matrix_uint_swap_rowcol: ptr[gsl_matrix_uint] * size * size -> int;
  fun gsl_matrix_uint_swap_rows: ptr[gsl_matrix_uint] * size * size -> int;
  fun gsl_matrix_uint_transpose: ptr[gsl_matrix_uint] -> int;
  fun gsl_matrix_uint_transpose_memcpy: ptr[gsl_matrix_uint] * cptr[gsl_matrix_uint] -> int;
  fun gsl_matrix_uint_view_array: ptr[uint] * size * size -> _gsl_matrix_uint_view;
  fun gsl_matrix_uint_view_array_with_tda: ptr[uint] * size * size * size -> _gsl_matrix_uint_view;
  fun gsl_matrix_uint_view_vector: ptr[gsl_vector_uint] * size * size -> _gsl_matrix_uint_view;
  fun gsl_matrix_uint_view_vector_with_tda: ptr[gsl_vector_uint] * size * size * size -> _gsl_matrix_uint_view;
  fun gsl_vector_uint_alloc_col_from_matrix: ptr[gsl_matrix_uint] * size -> ptr[gsl_vector_uint];
  fun gsl_vector_uint_alloc_row_from_matrix: ptr[gsl_matrix_uint] * size -> ptr[gsl_vector_uint];
}
