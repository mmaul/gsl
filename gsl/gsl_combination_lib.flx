//Module        : gsl_combination_h
//Timestamp     : 2006/3/29 3:52:26 UTC
//Timestamp     : 2006/3/29 14:52:26 (local)
//Raw Header    : gsl_combination.h
//Preprocessor  : gcc -E
//Input file: gsl.flxcc.i
//Flxcc Control : gsl.flxcc
//Felix Version : 1.1.2_rc7
include 'std';

//#define __GSL_COMBINATION_H__
header '#include <gsl/gsl_combination.h>';

//INCLUDES
include "gsl_combination_struct_lib";

class gsl_combination_h
{
  open C_hack;
  open gsl_combination_struct_h;

  //CSTRUCTS
  cstruct gsl_combination_struct {
    n: size;
    k: size;
    data: ptr[size];
  }

  //STRUCT or UNION TAG ALIASES
  typedef gsl_combination = gsl_combination_struct;

  //TYPE ALIASES
  typedef _struct_gsl_combination_struct = gsl_combination_struct;

  //PROCEDURES
  proc gsl_combination_free: ptr[gsl_combination];
  proc gsl_combination_init_first: ptr[gsl_combination];
  proc gsl_combination_init_last: ptr[gsl_combination];

  //FUNCTIONS
  fun gsl_combination_alloc: size * size -> ptr[gsl_combination];
  fun gsl_combination_calloc: size * size -> ptr[gsl_combination];
  fun gsl_combination_data: cptr[gsl_combination] -> ptr[size];
  fun gsl_combination_fprintf: ptr[FILE] * cptr[gsl_combination] * cptr[char] -> int;
  fun gsl_combination_fread: ptr[FILE] * ptr[gsl_combination] -> int;
  fun gsl_combination_fscanf: ptr[FILE] * ptr[gsl_combination] -> int;
  fun gsl_combination_fwrite: ptr[FILE] * cptr[gsl_combination] -> int;
  fun gsl_combination_get: cptr[gsl_combination] * size -> size;
  fun gsl_combination_k: cptr[gsl_combination] -> size;
  fun gsl_combination_memcpy: ptr[gsl_combination] * cptr[gsl_combination] -> int;
  fun gsl_combination_n: cptr[gsl_combination] -> size;
  fun gsl_combination_next: ptr[gsl_combination] -> int;
  fun gsl_combination_prev: ptr[gsl_combination] -> int;
  fun gsl_combination_valid: ptr[gsl_combination] -> int;
}
