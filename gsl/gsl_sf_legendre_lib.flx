//Module        : gsl_sf_legendre_h
//Timestamp     : 2006/3/29 3:52:26 UTC
//Timestamp     : 2006/3/29 14:52:26 (local)
//Raw Header    : gsl_sf_legendre.h
//Preprocessor  : gcc -E
//Input file: gsl.flxcc.i
//Flxcc Control : gsl.flxcc
//Felix Version : 1.1.2_rc7
include 'std';

//#define __GSL_SF_LEGENDRE_H__
header '#include <gsl/gsl_sf_legendre.h>';

//INCLUDES
include "gsl_sf_result_lib";

class gsl_sf_legendre_h
{
  open C_hack;
  open gsl_sf_result_h;

  //FUNCTIONS
  fun gsl_sf_conicalP_0: double * double -> double;
  fun gsl_sf_conicalP_0_e: double * double * ptr[gsl_sf_result] -> int;
  fun gsl_sf_conicalP_1: double * double -> double;
  fun gsl_sf_conicalP_1_e: double * double * ptr[gsl_sf_result] -> int;
  fun gsl_sf_conicalP_cyl_reg: int * double * double -> double;
  fun gsl_sf_conicalP_cyl_reg_e: int * double * double * ptr[gsl_sf_result] -> int;
  fun gsl_sf_conicalP_half: double * double -> double;
  fun gsl_sf_conicalP_half_e: double * double * ptr[gsl_sf_result] -> int;
  fun gsl_sf_conicalP_mhalf: double * double -> double;
  fun gsl_sf_conicalP_mhalf_e: double * double * ptr[gsl_sf_result] -> int;
  fun gsl_sf_conicalP_sph_reg: int * double * double -> double;
  fun gsl_sf_conicalP_sph_reg_e: int * double * double * ptr[gsl_sf_result] -> int;
  fun gsl_sf_legendre_H3d: int * double * double -> double;
  fun gsl_sf_legendre_H3d_0: double * double -> double;
  fun gsl_sf_legendre_H3d_0_e: double * double * ptr[gsl_sf_result] -> int;
  fun gsl_sf_legendre_H3d_1: double * double -> double;
  fun gsl_sf_legendre_H3d_1_e: double * double * ptr[gsl_sf_result] -> int;
  fun gsl_sf_legendre_H3d_array: int * double * double * ptr[double] -> int;
  fun gsl_sf_legendre_H3d_e: int * double * double * ptr[gsl_sf_result] -> int;
  fun gsl_sf_legendre_P1: double -> double;
  fun gsl_sf_legendre_P1_e: double * ptr[gsl_sf_result] -> int;
  fun gsl_sf_legendre_P2: double -> double;
  fun gsl_sf_legendre_P2_e: double * ptr[gsl_sf_result] -> int;
  fun gsl_sf_legendre_P3: double -> double;
  fun gsl_sf_legendre_P3_e: double * ptr[gsl_sf_result] -> int;
  fun gsl_sf_legendre_Pl: int * double -> double;
  fun gsl_sf_legendre_Pl_array: int * double * ptr[double] -> int;
  fun gsl_sf_legendre_Pl_deriv_array: int * double * ptr[double] * ptr[double] -> int;
  fun gsl_sf_legendre_Pl_e: int * double * ptr[gsl_sf_result] -> int;
  fun gsl_sf_legendre_Plm: int * int * double -> double;
  fun gsl_sf_legendre_Plm_array: int * int * double * ptr[double] -> int;
  fun gsl_sf_legendre_Plm_deriv_array: int * int * double * ptr[double] * ptr[double] -> int;
  fun gsl_sf_legendre_Plm_e: int * int * double * ptr[gsl_sf_result] -> int;
  fun gsl_sf_legendre_Q0: double -> double;
  fun gsl_sf_legendre_Q0_e: double * ptr[gsl_sf_result] -> int;
  fun gsl_sf_legendre_Q1: double -> double;
  fun gsl_sf_legendre_Q1_e: double * ptr[gsl_sf_result] -> int;
  fun gsl_sf_legendre_Ql: int * double -> double;
  fun gsl_sf_legendre_Ql_e: int * double * ptr[gsl_sf_result] -> int;
  fun gsl_sf_legendre_array_size: int * int -> int;
  fun gsl_sf_legendre_sphPlm: int * int * double -> double;
  fun gsl_sf_legendre_sphPlm_array: int * int * double * ptr[double] -> int;
  fun gsl_sf_legendre_sphPlm_deriv_array: int * int * double * ptr[double] * ptr[double] -> int;
  fun gsl_sf_legendre_sphPlm_e: int * int * double * ptr[gsl_sf_result] -> int;
}
