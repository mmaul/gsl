//Module        : gsl_fft_complex_float_h
//Timestamp     : 2006/3/29 3:52:26 UTC
//Timestamp     : 2006/3/29 14:52:26 (local)
//Raw Header    : gsl_fft_complex_float.h
//Preprocessor  : gcc -E
//Input file: gsl.flxcc.i
//Flxcc Control : gsl.flxcc
//Felix Version : 1.1.2_rc7
include 'std';

//#define __GSL_FFT_COMPLEX_FLOAT_H__
header '#include <gsl/gsl_fft_complex_float.h>';

//INCLUDES
include "gsl_complex_lib";
include "gsl_fft_lib";

class gsl_fft_complex_float_h
{
  open C_hack;
  open gsl_complex_h;
  open gsl_fft_h;

  //ABSTRACT TYPES
  type gsl_fft_complex_workspace_float = 'gsl_fft_complex_workspace_float';
  type gsl_fft_complex_wavetable_float = 'gsl_fft_complex_wavetable_float';

  //PROCEDURES
  proc gsl_fft_complex_wavetable_float_free: ptr[gsl_fft_complex_wavetable_float];
  proc gsl_fft_complex_workspace_float_free: ptr[gsl_fft_complex_workspace_float];

  //FUNCTIONS
  fun gsl_fft_complex_float_backward: gsl_complex_packed_array_float * size * size * cptr[gsl_fft_complex_wavetable_float] * ptr[gsl_fft_complex_workspace_float] -> int;
  fun gsl_fft_complex_float_forward: gsl_complex_packed_array_float * size * size * cptr[gsl_fft_complex_wavetable_float] * ptr[gsl_fft_complex_workspace_float] -> int;
  fun gsl_fft_complex_float_inverse: gsl_complex_packed_array_float * size * size * cptr[gsl_fft_complex_wavetable_float] * ptr[gsl_fft_complex_workspace_float] -> int;
  fun gsl_fft_complex_float_memcpy: ptr[gsl_fft_complex_wavetable_float] * ptr[gsl_fft_complex_wavetable_float] -> int;
  fun gsl_fft_complex_float_radix2_backward: gsl_complex_packed_array_float * size * size -> int;
  fun gsl_fft_complex_float_radix2_dif_backward: gsl_complex_packed_array_float * size * size -> int;
  fun gsl_fft_complex_float_radix2_dif_forward: gsl_complex_packed_array_float * size * size -> int;
  fun gsl_fft_complex_float_radix2_dif_inverse: gsl_complex_packed_array_float * size * size -> int;
  fun gsl_fft_complex_float_radix2_dif_transform: gsl_complex_packed_array_float * size * size * gsl_fft_direction -> int;
  fun gsl_fft_complex_float_radix2_forward: gsl_complex_packed_array_float * size * size -> int;
  fun gsl_fft_complex_float_radix2_inverse: gsl_complex_packed_array_float * size * size -> int;
  fun gsl_fft_complex_float_radix2_transform: gsl_complex_packed_array_float * size * size * gsl_fft_direction -> int;
  fun gsl_fft_complex_float_transform: gsl_complex_packed_array_float * size * size * cptr[gsl_fft_complex_wavetable_float] * ptr[gsl_fft_complex_workspace_float] * gsl_fft_direction -> int;
  fun gsl_fft_complex_wavetable_float_alloc: size -> ptr[gsl_fft_complex_wavetable_float];
  fun gsl_fft_complex_workspace_float_alloc: size -> ptr[gsl_fft_complex_workspace_float];
}
